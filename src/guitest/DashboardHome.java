/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package guitest;

//import static guitest.App.*;
import java.awt.Color;
import javax.swing.JPanel;


/**
 *
 * @author HILTON9
 */
public class DashboardHome extends javax.swing.JFrame {
    private boolean isDashboardSelected;
    private boolean isSalesPanelSelected;
    private boolean isSuppliersPanelSelected;
    private boolean isInventoryPanelSelected;
    private boolean isCemeteryManagementPanelSelected;
    private boolean isUserManagementPanelSelected;
    private boolean isEventCalenderPanelSelected;
    private boolean isFuneralPackagesPanelSelected;
    
    private boolean isAllSalesSelected = true;
    private boolean isCustomersSelected;
    private boolean isPackagesSelected;
    
    private final Color SELECTED_COLOR = new Color(65, 119, 160);
    private final Color HOVER_COLOR = new Color(247, 68, 71);
    private final Color DEFUALT_HOVER_COLOR = new Color(10,18,50);
    
    private final Color SELECTED_UNDERLINE_HEADER = new Color(247, 68, 71);
    private final Color DEFUALT_UNDERLINE_HEADER = new Color(255, 255, 255);
    private final Color HOVER_UNDERLINE_HEADER = new Color(65, 119, 160);
    /**
     * Creates new form DashboardHome
     */
    public DashboardHome() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel8 = new javax.swing.JPanel();
        jSeparator1 = new javax.swing.JSeparator();
        salesBabkground = new javax.swing.JPanel();
        salesDashboardLink = new javax.swing.JLabel();
        suppliersBackground = new javax.swing.JPanel();
        suppliersDashboardLink = new javax.swing.JLabel();
        inventoryBackground = new javax.swing.JPanel();
        inventoryDashboardLink = new javax.swing.JLabel();
        cemetoryManagementBackground = new javax.swing.JPanel();
        cemeteryManagementDashboardLink = new javax.swing.JLabel();
        userManagementBackground = new javax.swing.JPanel();
        userManagementDashboardLink = new javax.swing.JLabel();
        eventCalanderBackground = new javax.swing.JPanel();
        eventCalenderDashboardLink = new javax.swing.JLabel();
        funeralPackageBackground = new javax.swing.JPanel();
        funeralPackagesDashboardLink = new javax.swing.JLabel();
        dashboardLink = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel8.setBackground(new java.awt.Color(10, 18, 50));
        jPanel8.setPreferredSize(new java.awt.Dimension(280, 818));
        jPanel8.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jSeparator1.setForeground(new java.awt.Color(255, 255, 255));
        jPanel8.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 290, -1));

        salesBabkground.setBackground(new java.awt.Color(10, 18, 50));
        salesBabkground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesBabkgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salesBabkgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salesBabkgroundMouseExited(evt);
            }
        });

        salesDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        salesDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        salesDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        salesDashboardLink.setText("Sales");
        salesDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salesDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                salesDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                salesDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                salesDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout salesBabkgroundLayout = new javax.swing.GroupLayout(salesBabkground);
        salesBabkground.setLayout(salesBabkgroundLayout);
        salesBabkgroundLayout.setHorizontalGroup(
            salesBabkgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesBabkgroundLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addComponent(salesDashboardLink)
                .addContainerGap(223, Short.MAX_VALUE))
        );
        salesBabkgroundLayout.setVerticalGroup(
            salesBabkgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, salesBabkgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(salesDashboardLink)
                .addContainerGap())
        );

        jPanel8.add(salesBabkground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 80, 290, -1));

        suppliersBackground.setBackground(new java.awt.Color(10, 18, 50));
        suppliersBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suppliersBackgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                suppliersBackgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                suppliersBackgroundMouseExited(evt);
            }
        });

        suppliersDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        suppliersDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        suppliersDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        suppliersDashboardLink.setText("Suppliers");
        suppliersDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        suppliersDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                suppliersDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                suppliersDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                suppliersDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout suppliersBackgroundLayout = new javax.swing.GroupLayout(suppliersBackground);
        suppliersBackground.setLayout(suppliersBackgroundLayout);
        suppliersBackgroundLayout.setHorizontalGroup(
            suppliersBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(suppliersBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(suppliersDashboardLink)
                .addContainerGap(186, Short.MAX_VALUE))
        );
        suppliersBackgroundLayout.setVerticalGroup(
            suppliersBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, suppliersBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(suppliersDashboardLink)
                .addContainerGap())
        );

        jPanel8.add(suppliersBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 130, 290, -1));

        inventoryBackground.setBackground(new java.awt.Color(10, 18, 50));
        inventoryBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventoryBackgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inventoryBackgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inventoryBackgroundMouseExited(evt);
            }
        });

        inventoryDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        inventoryDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        inventoryDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        inventoryDashboardLink.setText("Inventory");
        inventoryDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        inventoryDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                inventoryDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                inventoryDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                inventoryDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout inventoryBackgroundLayout = new javax.swing.GroupLayout(inventoryBackground);
        inventoryBackground.setLayout(inventoryBackgroundLayout);
        inventoryBackgroundLayout.setHorizontalGroup(
            inventoryBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(inventoryDashboardLink)
                .addContainerGap(184, Short.MAX_VALUE))
        );
        inventoryBackgroundLayout.setVerticalGroup(
            inventoryBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inventoryBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inventoryDashboardLink)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.add(inventoryBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 180, 290, -1));

        cemetoryManagementBackground.setBackground(new java.awt.Color(10, 18, 50));
        cemetoryManagementBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cemetoryManagementBackgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cemetoryManagementBackgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cemetoryManagementBackgroundMouseExited(evt);
            }
        });

        cemeteryManagementDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        cemeteryManagementDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        cemeteryManagementDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        cemeteryManagementDashboardLink.setText("Cemetery Management");
        cemeteryManagementDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        cemeteryManagementDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cemeteryManagementDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                cemeteryManagementDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                cemeteryManagementDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout cemetoryManagementBackgroundLayout = new javax.swing.GroupLayout(cemetoryManagementBackground);
        cemetoryManagementBackground.setLayout(cemetoryManagementBackgroundLayout);
        cemetoryManagementBackgroundLayout.setHorizontalGroup(
            cemetoryManagementBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cemetoryManagementBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(cemeteryManagementDashboardLink)
                .addContainerGap(52, Short.MAX_VALUE))
        );
        cemetoryManagementBackgroundLayout.setVerticalGroup(
            cemetoryManagementBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cemetoryManagementBackgroundLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(cemeteryManagementDashboardLink)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel8.add(cemetoryManagementBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 230, 290, -1));

        userManagementBackground.setBackground(new java.awt.Color(10, 18, 50));
        userManagementBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userManagementBackgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userManagementBackgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userManagementBackgroundMouseExited(evt);
            }
        });

        userManagementDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        userManagementDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        userManagementDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        userManagementDashboardLink.setText("User Management");
        userManagementDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        userManagementDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                userManagementDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                userManagementDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                userManagementDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout userManagementBackgroundLayout = new javax.swing.GroupLayout(userManagementBackground);
        userManagementBackground.setLayout(userManagementBackgroundLayout);
        userManagementBackgroundLayout.setHorizontalGroup(
            userManagementBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(userManagementBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(userManagementDashboardLink)
                .addContainerGap(100, Short.MAX_VALUE))
        );
        userManagementBackgroundLayout.setVerticalGroup(
            userManagementBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, userManagementBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(userManagementDashboardLink)
                .addContainerGap())
        );

        jPanel8.add(userManagementBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 290, -1));

        eventCalanderBackground.setBackground(new java.awt.Color(10, 18, 50));
        eventCalanderBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventCalanderBackgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eventCalanderBackgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eventCalanderBackgroundMouseExited(evt);
            }
        });

        eventCalenderDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        eventCalenderDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        eventCalenderDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        eventCalenderDashboardLink.setText("Event Calender");
        eventCalenderDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        eventCalenderDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                eventCalenderDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                eventCalenderDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                eventCalenderDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout eventCalanderBackgroundLayout = new javax.swing.GroupLayout(eventCalanderBackground);
        eventCalanderBackground.setLayout(eventCalanderBackgroundLayout);
        eventCalanderBackgroundLayout.setHorizontalGroup(
            eventCalanderBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(eventCalanderBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(eventCalenderDashboardLink)
                .addContainerGap(130, Short.MAX_VALUE))
        );
        eventCalanderBackgroundLayout.setVerticalGroup(
            eventCalanderBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, eventCalanderBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(eventCalenderDashboardLink)
                .addContainerGap())
        );

        jPanel8.add(eventCalanderBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 290, -1));

        funeralPackageBackground.setBackground(new java.awt.Color(10, 18, 50));
        funeralPackageBackground.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                funeralPackageBackgroundMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                funeralPackageBackgroundMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                funeralPackageBackgroundMouseExited(evt);
            }
        });

        funeralPackagesDashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        funeralPackagesDashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 22)); // NOI18N
        funeralPackagesDashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        funeralPackagesDashboardLink.setText("Funeral Packages");
        funeralPackagesDashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        funeralPackagesDashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                funeralPackagesDashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                funeralPackagesDashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                funeralPackagesDashboardLinkMouseExited(evt);
            }
        });

        javax.swing.GroupLayout funeralPackageBackgroundLayout = new javax.swing.GroupLayout(funeralPackageBackground);
        funeralPackageBackground.setLayout(funeralPackageBackgroundLayout);
        funeralPackageBackgroundLayout.setHorizontalGroup(
            funeralPackageBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(funeralPackageBackgroundLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(funeralPackagesDashboardLink)
                .addContainerGap(110, Short.MAX_VALUE))
        );
        funeralPackageBackgroundLayout.setVerticalGroup(
            funeralPackageBackgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, funeralPackageBackgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(funeralPackagesDashboardLink)
                .addContainerGap())
        );

        jPanel8.add(funeralPackageBackground, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 380, 290, -1));

        dashboardLink.setBackground(new java.awt.Color(255, 255, 255));
        dashboardLink.setFont(new java.awt.Font("Segoe UI Light", 0, 36)); // NOI18N
        dashboardLink.setForeground(new java.awt.Color(255, 255, 255));
        dashboardLink.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dashboardLink.setText("Dashboard");
        dashboardLink.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dashboardLink.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dashboardLinkMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dashboardLinkMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dashboardLinkMouseExited(evt);
            }
        });
        jPanel8.add(dashboardLink, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 70));

        getContentPane().add(jPanel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 290, 820));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salesDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesDashboardLinkMouseClicked
        setDefualtSetValues();
        isSalesPanelSelected = true;
        this.mouseEntertedBackgroundColor(salesBabkground);
//        this.swicthAppPanel(salesPanel);
    }//GEN-LAST:event_salesDashboardLinkMouseClicked

    private void salesDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(salesBabkground);
        if (!isSalesPanelSelected) {
            salesBabkground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_salesDashboardLinkMouseEntered

    private void salesDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(salesBabkground);
        if (!isSalesPanelSelected) {
            salesBabkground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_salesDashboardLinkMouseExited

    private void salesBabkgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesBabkgroundMouseClicked
        setDefualtSetValues();
        isSalesPanelSelected = true;
        this.mouseEntertedBackgroundColor(salesBabkground);
//        this.swicthAppPanel(salesPanel);
    }//GEN-LAST:event_salesBabkgroundMouseClicked

    private void salesBabkgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesBabkgroundMouseEntered
//        this.mouseEntertedBackgroundColor(salesBabkground);
        if (!isSalesPanelSelected) {
            salesBabkground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_salesBabkgroundMouseEntered

    private void salesBabkgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_salesBabkgroundMouseExited
//        this.mouseExitedBackgroundColor(salesBabkground);
        if (!isSalesPanelSelected) {
            salesBabkground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_salesBabkgroundMouseExited

    private void suppliersDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersDashboardLinkMouseClicked
        setDefualtSetValues();
        isSuppliersPanelSelected = true;
        this.mouseEntertedBackgroundColor(suppliersBackground);
        //        this.swicthAppPanel(bg);
    }//GEN-LAST:event_suppliersDashboardLinkMouseClicked

    private void suppliersDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(suppliersBackground);
        if (!isSuppliersPanelSelected) {
            suppliersBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_suppliersDashboardLinkMouseEntered

    private void suppliersDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(suppliersBackground);
        if (!isSuppliersPanelSelected) {
            suppliersBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_suppliersDashboardLinkMouseExited

    private void suppliersBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersBackgroundMouseClicked
        setDefualtSetValues();
        isSuppliersPanelSelected = true;
        this.mouseEntertedBackgroundColor(suppliersBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_suppliersBackgroundMouseClicked

    private void suppliersBackgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersBackgroundMouseEntered
//        this.mouseEntertedBackgroundColor(suppliersBackground);
        if (!isSuppliersPanelSelected) {
            suppliersBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_suppliersBackgroundMouseEntered

    private void suppliersBackgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_suppliersBackgroundMouseExited
//        this.mouseExitedBackgroundColor(suppliersBackground);
        if (!isSuppliersPanelSelected) {
            suppliersBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_suppliersBackgroundMouseExited

    private void inventoryDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryDashboardLinkMouseClicked
        setDefualtSetValues();
        isInventoryPanelSelected = true;
        this.mouseEntertedBackgroundColor(inventoryBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_inventoryDashboardLinkMouseClicked

    private void inventoryDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(inventoryBackground);
        if (!isInventoryPanelSelected) {
            inventoryBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_inventoryDashboardLinkMouseEntered

    private void inventoryDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(inventoryBackground);
        if (!isInventoryPanelSelected) {
            inventoryBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_inventoryDashboardLinkMouseExited

    private void inventoryBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryBackgroundMouseClicked
        setDefualtSetValues();
        isInventoryPanelSelected = true;
        this.mouseEntertedBackgroundColor(inventoryBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_inventoryBackgroundMouseClicked

    private void inventoryBackgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryBackgroundMouseEntered
//        this.mouseEntertedBackgroundColor(inventoryBackground);
        if (!isInventoryPanelSelected) {
            inventoryBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_inventoryBackgroundMouseEntered

    private void inventoryBackgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_inventoryBackgroundMouseExited
//        this.mouseExitedBackgroundColor(inventoryBackground);
        if (!isInventoryPanelSelected) {
            inventoryBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_inventoryBackgroundMouseExited

    private void cemeteryManagementDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cemeteryManagementDashboardLinkMouseClicked
        setDefualtSetValues();
        isCemeteryManagementPanelSelected = true;
        this.mouseEntertedBackgroundColor(cemetoryManagementBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_cemeteryManagementDashboardLinkMouseClicked

    private void cemeteryManagementDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cemeteryManagementDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(cemetoryManagementBackground);
        if (!isCemeteryManagementPanelSelected) {
            cemetoryManagementBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_cemeteryManagementDashboardLinkMouseEntered

    private void cemeteryManagementDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cemeteryManagementDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(cemetoryManagementBackground);
        if (!isCemeteryManagementPanelSelected) {
            cemetoryManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_cemeteryManagementDashboardLinkMouseExited

    private void cemetoryManagementBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cemetoryManagementBackgroundMouseClicked
        setDefualtSetValues();
        isCemeteryManagementPanelSelected = true;
        this.mouseEntertedBackgroundColor(cemetoryManagementBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_cemetoryManagementBackgroundMouseClicked

    private void cemetoryManagementBackgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cemetoryManagementBackgroundMouseEntered
//        this.mouseEntertedBackgroundColor(cemetoryManagementBackground);
        if (!isCemeteryManagementPanelSelected) {
            cemetoryManagementBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_cemetoryManagementBackgroundMouseEntered

    private void cemetoryManagementBackgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cemetoryManagementBackgroundMouseExited
//        this.mouseExitedBackgroundColor(cemetoryManagementBackground);
        if (!isCemeteryManagementPanelSelected) {
            cemetoryManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_cemetoryManagementBackgroundMouseExited

    private void userManagementDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManagementDashboardLinkMouseClicked
        setDefualtSetValues();
        isUserManagementPanelSelected = true;
        this.mouseEntertedBackgroundColor(userManagementBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_userManagementDashboardLinkMouseClicked

    private void userManagementDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManagementDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(userManagementBackground);
        if (!isUserManagementPanelSelected) {
            userManagementBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_userManagementDashboardLinkMouseEntered

    private void userManagementDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManagementDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(userManagementBackground);
        if (!isUserManagementPanelSelected) {
            userManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_userManagementDashboardLinkMouseExited

    private void userManagementBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManagementBackgroundMouseClicked
        setDefualtSetValues();
        isUserManagementPanelSelected = true;
        this.mouseEntertedBackgroundColor(userManagementBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_userManagementBackgroundMouseClicked

    private void userManagementBackgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManagementBackgroundMouseEntered
//        this.mouseEntertedBackgroundColor(userManagementBackground);
        if (!isUserManagementPanelSelected) {
            userManagementBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_userManagementBackgroundMouseEntered

    private void userManagementBackgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_userManagementBackgroundMouseExited
//        this.mouseExitedBackgroundColor(userManagementBackground);
        if (!isUserManagementPanelSelected) {
            userManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_userManagementBackgroundMouseExited

    private void eventCalenderDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventCalenderDashboardLinkMouseClicked
        setDefualtSetValues();
        isEventCalenderPanelSelected = true;
        this.mouseEntertedBackgroundColor(eventCalanderBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_eventCalenderDashboardLinkMouseClicked

    private void eventCalenderDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventCalenderDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(eventCalanderBackground);
        if (!isEventCalenderPanelSelected) {
            eventCalanderBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_eventCalenderDashboardLinkMouseEntered

    private void eventCalenderDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventCalenderDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(eventCalanderBackground);
        if (!isEventCalenderPanelSelected) {
            eventCalanderBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_eventCalenderDashboardLinkMouseExited

    private void eventCalanderBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventCalanderBackgroundMouseClicked
        setDefualtSetValues();
        isEventCalenderPanelSelected = true;
        this.mouseEntertedBackgroundColor(eventCalanderBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_eventCalanderBackgroundMouseClicked

    private void eventCalanderBackgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventCalanderBackgroundMouseEntered
//        this.mouseEntertedBackgroundColor(eventCalanderBackground);
        if (!isEventCalenderPanelSelected) {
            eventCalanderBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_eventCalanderBackgroundMouseEntered

    private void eventCalanderBackgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_eventCalanderBackgroundMouseExited
//        this.mouseExitedBackgroundColor(eventCalanderBackground);
        if (!isEventCalenderPanelSelected) {
            eventCalanderBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_eventCalanderBackgroundMouseExited

    private void funeralPackagesDashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funeralPackagesDashboardLinkMouseClicked
        setDefualtSetValues();
        isFuneralPackagesPanelSelected = true;
        this.mouseEntertedBackgroundColor(funeralPackageBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_funeralPackagesDashboardLinkMouseClicked

    private void funeralPackagesDashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funeralPackagesDashboardLinkMouseEntered
//        this.mouseEntertedBackgroundColor(funeralPackageBackground);
        if (!isFuneralPackagesPanelSelected) {
            funeralPackageBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_funeralPackagesDashboardLinkMouseEntered

    private void funeralPackagesDashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funeralPackagesDashboardLinkMouseExited
//        this.mouseExitedBackgroundColor(funeralPackageBackground);
        if (!isFuneralPackagesPanelSelected) {
            funeralPackageBackground.setBackground(DEFUALT_HOVER_COLOR);
        }
    }//GEN-LAST:event_funeralPackagesDashboardLinkMouseExited

    private void funeralPackageBackgroundMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funeralPackageBackgroundMouseClicked
        setDefualtSetValues();
        isFuneralPackagesPanelSelected = true;
        this.mouseEntertedBackgroundColor(funeralPackageBackground);
        //        this.swicthPanel(salesPanel);
    }//GEN-LAST:event_funeralPackageBackgroundMouseClicked

    private void funeralPackageBackgroundMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funeralPackageBackgroundMouseEntered
        setDefualtSetValues();
        if (!isFuneralPackagesPanelSelected) {
            funeralPackageBackground.setBackground(HOVER_COLOR);
        }
    }//GEN-LAST:event_funeralPackageBackgroundMouseEntered

    private void funeralPackageBackgroundMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_funeralPackageBackgroundMouseExited
       setDefualtSetValues();
       if (!isFuneralPackagesPanelSelected) {
            funeralPackageBackground.setBackground(DEFUALT_HOVER_COLOR);
       }
    }//GEN-LAST:event_funeralPackageBackgroundMouseExited

    private void dashboardLinkMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLinkMouseClicked
        setDefualtSetValues();
        isDashboardSelected = true;
        this.setDefualtBackgroundColor();
//        this.swicthAppPanel(dashboardPanel);
    }//GEN-LAST:event_dashboardLinkMouseClicked

    private void dashboardLinkMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLinkMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_dashboardLinkMouseEntered

    private void dashboardLinkMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dashboardLinkMouseExited
        // TODO add your handling code here:
    }//GEN-LAST:event_dashboardLinkMouseExited

//    public void mouseEntertedBackgroundColor(JPanel panel) {
//        setDefualtBackgroundColor();
//        panel.setBackground(SELECTED_COLOR);
//        setSelected(SELECTED_COLOR);
//    }
//        
//    public void mouseExitedBackgroundColor(JPanel panel) {
//        setDefualtBackgroundColor();
//        panel.setBackground(DEFUALT_HOVER_COLOR);
//        setSelected(DEFUALT_HOVER_COLOR);
//   }
//    
//    public void setSelected(Color color) {
//        if (isCemeteryManagementPanelSelected) {
//            cemetoryManagementBackground.setBackground(color);
//        } else if (isEventCalenderPanelSelected) {
//            eventCalanderBackground.setBackground(color);
//        } else if (isFuneralPackagesPanelSelected) {
//            funeralPackageBackground.setBackground(color);
//        } else if (isInventoryPanelSelected) {
//            inventoryBackground.setBackground(color);
//        } else if (isSalesPanelSelected) {
//            salesBabkground.setBackground(color);
//        } else if (isSuppliersPanelSelected) {
//            suppliersBackground.setBackground(color);
//        } else if (isUserManagementPanelSelected) {
//            userManagementBackground.setBackground(color);
//        }
//    }
//    
//    public void setDefualtBackgroundColor() {
//        salesBabkground.setBackground(DEFUALT_HOVER_COLOR);
//        suppliersBackground.setBackground(DEFUALT_HOVER_COLOR);
//        inventoryBackground.setBackground(DEFUALT_HOVER_COLOR);
//        cemetoryManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
//        userManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
//        eventCalanderBackground.setBackground(DEFUALT_HOVER_COLOR);
//        funeralPackageBackground.setBackground(DEFUALT_HOVER_COLOR);
//    }
    
    
    private void mouseEntertedBackgroundColor(JPanel panel) {
        this.setDefualtBackgroundColor();
        panel.setBackground(SELECTED_COLOR);
        this.setSelected(SELECTED_COLOR);
    }
        
    private void mouseExitedBackgroundColor(JPanel panel) {
        this.setDefualtBackgroundColor();
        panel.setBackground(DEFUALT_HOVER_COLOR);
        this.setSelected(DEFUALT_HOVER_COLOR);
   }
    
    public void setSelected(Color color) {
        if (isCemeteryManagementPanelSelected) {
            cemetoryManagementBackground.setBackground(color);
        } else if (isEventCalenderPanelSelected) {
            eventCalanderBackground.setBackground(color);
        } else if (isFuneralPackagesPanelSelected) {
            funeralPackageBackground.setBackground(color);
        } else if (isInventoryPanelSelected) {
            inventoryBackground.setBackground(color);
        } else if (isSalesPanelSelected) {
            salesBabkground.setBackground(color);
        } else if (isSuppliersPanelSelected) {
            suppliersBackground.setBackground(color);
        } else if (isUserManagementPanelSelected) {
            userManagementBackground.setBackground(color);
        }
    }
    
    public void setDefualtBackgroundColor() {
        salesBabkground.setBackground(DEFUALT_HOVER_COLOR);
        suppliersBackground.setBackground(DEFUALT_HOVER_COLOR);
        inventoryBackground.setBackground(DEFUALT_HOVER_COLOR);
        cemetoryManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
        userManagementBackground.setBackground(DEFUALT_HOVER_COLOR);
        eventCalanderBackground.setBackground(DEFUALT_HOVER_COLOR);
        funeralPackageBackground.setBackground(DEFUALT_HOVER_COLOR);
    }
    
    private void setDefualtSetValues() {
        isCemeteryManagementPanelSelected = false;
        isDashboardSelected = false;
        isEventCalenderPanelSelected = false;
        isFuneralPackagesPanelSelected = false;
        isInventoryPanelSelected = false;
        isSuppliersPanelSelected = false;
        isUserManagementPanelSelected = false;
        isSalesPanelSelected = false;
    }
    
//    public void swicthAppPanel(JPanel panel) {
//        layeredAppPanel.removeAll();
//        layeredAppPanel.add(panel);
//        layeredAppPanel.repaint();
//        layeredAppPanel.revalidate();
//    }
    
//    public void swicthSalesPanel(JPanel panel) {
//        allSalesLayeredPanel.removeAll();
//        allSalesLayeredPanel.add(panel);
//        allSalesLayeredPanel.repaint();
//        allSalesLayeredPanel.revalidate();
//    }
    
//    public void resetUnderlineColor() {
//        allSalesUnderlineHeader.setBorder(javax.swing.BorderFactory.createLineBorder(DEFUALT_UNDERLINE_HEADER));
//        customerUnderlineHeader.setBorder(javax.swing.BorderFactory.createLineBorder(DEFUALT_UNDERLINE_HEADER));
//        packagesUnderlineHeader.setBorder(javax.swing.BorderFactory.createLineBorder(DEFUALT_UNDERLINE_HEADER));
//    }
    
//    public void resetUnderlineSelectedValues() {
//        this.isPackagesSelected = false;
//        this.isCustomersSelected = false;
//        this.isAllSalesSelected = false;
//    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DashboardHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DashboardHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DashboardHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DashboardHome.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DashboardHome().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel cemeteryManagementDashboardLink;
    private javax.swing.JPanel cemetoryManagementBackground;
    private javax.swing.JLabel dashboardLink;
    private javax.swing.JPanel eventCalanderBackground;
    private javax.swing.JLabel eventCalenderDashboardLink;
    private javax.swing.JPanel funeralPackageBackground;
    private javax.swing.JLabel funeralPackagesDashboardLink;
    private javax.swing.JPanel inventoryBackground;
    private javax.swing.JLabel inventoryDashboardLink;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel salesBabkground;
    private javax.swing.JLabel salesDashboardLink;
    private javax.swing.JPanel suppliersBackground;
    private javax.swing.JLabel suppliersDashboardLink;
    private javax.swing.JPanel userManagementBackground;
    private javax.swing.JLabel userManagementDashboardLink;
    // End of variables declaration//GEN-END:variables
}
